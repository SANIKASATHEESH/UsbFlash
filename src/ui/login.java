/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import dboperations.DbService;
import java.io.File;
import java.io.IOException;
import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.Paths;
import static java.nio.file.StandardWatchEventKinds.ENTRY_CREATE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_DELETE;
import static java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY;
import java.nio.file.WatchEvent;
import java.nio.file.WatchKey;
import java.nio.file.WatchService;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author RISS
 */
public class login extends javax.swing.JFrame {

    DiskUtils dsk=new DiskUtils();
    
    /**
     * Creates new form login
     */
    public login() {
        initComponents();
        setViews();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setForeground(new java.awt.Color(153, 153, 255));

        jLabel1.setText("USER NAME");

        jLabel2.setText("PASSWORD");

        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("                               New User??");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(114, 114, 114))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       String uname=jTextField1.getText();
       String pwd=jPasswordField1.getText();
       DbService db=new DbService();
       int i=db.userLogin(uname, pwd);
       if(i==1)
       {
          MainHome af=new MainHome();
          af.show();
          dispose();
       }
       else
       {
           JOptionPane.showMessageDialog(rootPane,"Invalid Username or Password");
           jTextField1.setText("");
           jPasswordField1.setText("");
       }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        DetectThread d=new DetectThread();
        d.start();
        
        File[] n=File.listRoots();
        for (File n1 : n) {
            FileWatchThread fw = new FileWatchThread(n1.toString());
            fw.start();
        }
        
    }//GEN-LAST:event_formWindowActivated

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        Registration rg=new Registration();
        rg.show();
        
    }//GEN-LAST:event_jLabel3MouseClicked

    static File[] oldListRoot = File.listRoots();

    private void setViews() {
        DbService d=new DbService();
        int x=d.checkuser();
        if(x==1){
            jLabel3.setVisible(false);
        }
    }
    
    class DetectThread extends Thread {  
        public void run() 
        {  
            System.out.println("thread is running...");  
            while (true) {
                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                File[] n=File.listRoots();
                if (File.listRoots().length > oldListRoot.length) {
                    
                    System.out.println("new drive detected");
                    String dr="";
                    for(int i = 0; i < n.length; i++){
                        if (!Arrays.asList(oldListRoot).contains(n[i])){
                            dr = n[i].toString();
                            break;
                        }
                    }
                    
                    oldListRoot = File.listRoots();
//                    String dr=oldListRoot[oldListRoot.length-1].toString();
                    System.out.println("drive "+dr.substring(0,dr.length()-2).trim()+" detected");

                    getDetails(dr);
                    FileWatchThread fw = new FileWatchThread(dr.toString());
                    fw.start();
                    
                    System.out.println("-----------------------------------------------------------------------------------------");
                } 
                else if (File.listRoots().length < oldListRoot.length) 
                {
                    System.out.println(File.listRoots()+"--------==========-----------------");
                    String dr="";
                    for(int i = 0; i < oldListRoot.length; i++){
                        if (!Arrays.asList(n).contains(oldListRoot[i])){
                            dr = oldListRoot[i].toString();
                            break;
                        }
                    }
                    System.out.println("drive "+toString()+"\\"+" removed");
                    
                    DbService db=new DbService();
                    db.updateExtras(dr.toString()+"\\");
//                    getDetails(dr);
//                    String HDD_SerialNo = HDD_SerialNo(oldListRoot[oldListRoot.length-1]+"");
                    oldListRoot = File.listRoots();
                    System.out.println("-----------------------------------------------------------------------------------------");
                }
            }
        }
    }
    
    class FileWatchThread extends Thread 
    {
        String drv="";
        private volatile boolean running = true;
        public FileWatchThread( String d) {
            drv=d;
        }
        public void run() 
        {  
            try {
            WatchService watcher = FileSystems.getDefault().newWatchService();
            Path dir = Paths.get(drv);
            dir.register(watcher, ENTRY_CREATE, ENTRY_DELETE, ENTRY_MODIFY);
             
            System.out.println("Watch Service registered for dir: " + dir.getFileName());
             
            while (running) {
                WatchKey key;
                try {
                    key = watcher.take();
                } catch (InterruptedException ex) {
                    return;
                }
                
                for (WatchEvent<?> event : key.pollEvents()) {
                    WatchEvent.Kind<?> kind = event.kind();
                     
                    @SuppressWarnings("unchecked")
                    WatchEvent<Path> ev = (WatchEvent<Path>) event;
                    Path fileName = ev.context();

                    String fileact=kind.name();
                                        
                    DbService db=new DbService();
                    db.addFileActions(dir.toString()+"\\",fileact,fileName);
                    
//                    if (kind == ENTRY_MODIFY ) {
//                        System.out.println("My source file has changed!!!");
//                    }
                }
                boolean valid = key.reset();
                if (!valid) {
                    break;
                }
            }
        } 
        catch (IOException ex) {
            System.err.println(ex);
        }
    }
        
    public void stopThread() {
            running = false;
            interrupt();
    }
    }
      
    
public void getDetails(String drive){
    FileSystemView fsv = FileSystemView.getFileSystemView();
    
//    File aDrive = new File("C:");
    File aDrive = new File(drive+"\\");

    long freeSpace = aDrive.getFreeSpace();
    System.out.println("freeSpace : "+freeSpace);
    long totalSpace = aDrive.getTotalSpace();
    System.out.println("totalSpace : "+totalSpace);
    
    String tp=fsv.getSystemTypeDescription(aDrive);
    System.out.println("Type : "+tp); 
    String s1 = fsv.getSystemDisplayName (aDrive);
    System.out.println("getSystemDisplayName : " + s1);
    
    String cnserial_no=dsk.getSerialNumber(drive);
    
    DbService db=new DbService();
    db.addExtras(drive.toString()+"\\", s1,tp,cnserial_no,totalSpace+"",freeSpace+"");
    
    
//NULL,`cn_drivename`,`cn_displayname`,`cntype`,`cnserial_no`,`max_space`,`free_space`,`con_time`,`rem_time`,`status`)
    
//    String s1 = FileSystemView.getFileSystemView().getSystemDisplayName (aDrive);
//    String s2 = FileSystemView.getFileSystemView().getSystemTypeDescription(aDrive);
//    
//        System.out.println("getSystemDisplayName : " + s1);
//        System.out.println("getSystemTypeDescription : " + s2);
    
}

    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new login().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
